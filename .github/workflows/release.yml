name: Release

on:
  push:
    tags:
      - 'v*'

  workflow_dispatch:

jobs:
  release:
    name: Build and Release

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Install dependencies
        run: yarn

      - name: Build app
        run: yarn build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_LINK: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          CSC_KEY_PASSWORD: ${{ secrets.P12_PASSWORD }}
          APPLE_ID: ${{ secrets.DEVELOPER_APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.DEVELOPER_APPLE_PASSWORD }}
          DEVELOPER_TEAM_ID: ${{ secrets.DEVELOPER_TEAM_ID }}

      - name: Copy target files
        if: matrix.os == 'macos-latest'
        run: |
          rsync -av --include="*.dmg" --exclude="*" "dist/electron/" "dist_p/"
          rsync -av --include="*.zip" --exclude="*" "dist/electron/" "dist_p/"
          rsync -av --include="*.blockmap" --exclude="*" "dist/electron/" "dist_p/"
          rsync -av --include="latest-mac.yml" --exclude="*" "dist/electron/" "dist_p/"

      - name: Copy target files for Windows
        if: matrix.os == 'windows-latest'
        run: |
          robocopy "dist/electron" "dist_p" *.exe
          robocopy "dist/electron" "dist_p" *.blockmap
          robocopy "dist/electron" "dist_p" latest.yml
          return 0

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist_electron
          path: dist_p

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: 'dist_p/**'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
